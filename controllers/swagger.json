{
  "swagger": "2.0",
  "info": {
    "description": "Ride-My-Way is a car pooling application that makes driver and passenger meet together for a ride. Below are all explanation that helps you start use the application .",
    "version": "1.0.0",
    "title": "Ride-My-way API documentation",
    "contact": {
      "email": "chrissoemma@gmail.com"
    }
  },
  "host": "rideapps.herokuapp.com",
  "basePath": "/api/v1",
  "schemes": ["https", "http"],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [

        ]
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        },
        "security": [

        ]
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/rides/": {
      "post": {
        "tags": ["Rides"],
        "description": "Create new rides in system",
        "parameters": [
          {
            "name": "ride",
            "in": "body",
            "description": "Ride that we want to create",
            "schema": {
              "$ref": "#/definitions/Ride"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/"
            }
          }
        }
      }
    },
    "/rides/": {
      "get": {
        "tags": ["Rides"],
        "summary": "Get all rides in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ride"
            }
          }
        }
      }
    },
    "/rides/{rideId}": {
      "parameters": [
        {
          "name": "rideId",
          "in": "path",
          "required": true,
          "description": "ID of ride that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Rides"],
        "summary": "Get ride with given ID",
        "responses": {
          "200": {
            "description": "Ride is found",
            "schema": {
              "$ref": "#/definitions/Ride"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "jwt": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
    }
},
"security": [
    {
        "jwt": []
    }
],
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "roleId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Ride": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "pickupArea": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Ride"
      }
    }
  }
}
